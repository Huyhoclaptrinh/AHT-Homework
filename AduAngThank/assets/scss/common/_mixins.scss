// mixins
// --------------------------

// base rendering for an icon
@mixin fa-icon {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
}

// sets relative font-sizing and alignment (in _sizing)
@mixin fa-size ($font-size) {
  font-size: fa-divide($font-size, $fa-size-scale-base) * 1em; // converts step in sizing scale into an em-based value that's relative to the scale's base
  line-height: fa-divide(1, $font-size) * 1em; // sets the line-height of the icon back to that of it's parent
  vertical-align: (fa-divide(6, $font-size) - fa-divide(3, 8)) * 1em; // vertically centers the icon taking into account the surrounding text's descender
}

// only display content to screen readers
// see: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
// see: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/
@mixin fa-sr-only() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// use in conjunction with .sr-only to only display content when it's focused
@mixin fa-sr-only-focusable() {
  &:not(:focus) {
    @include fa-sr-only();
  }
}

// sets a specific icon family to use alongside style + icon mixins

// convenience mixins for declaring pseudo-elements by CSS variable,
// including all style-specific font properties, and both the ::before
// and ::after elements in the duotone case.
@mixin fa-icon-solid($fa-var) {
  @extend %fa-icon;
  @extend .fa-solid;

  &::before {
    content: unquote("\"#{ $fa-var }\"");
  }
}

@mixin fa-icon-regular($fa-var) {
  @extend %fa-icon;
  @extend .fa-regular;

  &::before {
    content: unquote("\"#{ $fa-var }\"");
  }
}

@mixin fa-icon-brands($fa-var) {
  @extend %fa-icon;
  @extend .fa-brands;

  &::before {
    content: unquote("\"#{ $fa-var }\"");
  }
}

.row {
	display: flex;
}

//
// Fonts
// _______________________________

@mixin font-face(
	$family-name,
	$font-name,
	$font-weight: normal,
	$font-style: normal,
	$font-display: auto
) {
	@font-face {
		font-family: $family-name;
		src: url('#{$baseDir}fonts/#{$family-name}/ttf/#{$font-name}.ttf')
				format('truetype'),
			url('#{$baseDir}fonts/#{$family-name}/woff/#{$font-name}.woff')
				format('woff'),
			url('#{$baseDir}fonts/#{$family-name}/woff2/#{$font-name}.woff2')
				format('woff2');
		font-weight: $font-weight;
		font-style: $font-style;
	}
}

//
// Prefix
// _______________________________

@mixin css-prefix($property, $value, $prefixes: (webkit, moz)) {
	#{$property}: $value;
	@each $prefix in $prefixes {
		-#{$prefix}-#{$property}: $value;
	}
}
// display flex
@mixin flexbox {
	@include css-prefix(display, flex);
	flex-wrap: wrap;
}

// order
@mixin order($val) {
	@include css-prefix(order, $val);
}
// transform translate
@mixin translate($x: 0, $y: 0) {
	@include css-prefix(transform, translate($x, $y));
}
// transform scale
@mixin scale($x: 0, $y: 0) {
	@include css-prefix(transform, translate($x, $y));
}
// transform
@mixin transform($value) {
	@include css-prefix(transform, $value);
}

//
// Grid layout
// _______________________________

@mixin col($column-number: 1, $column-gap: 0) {
	flex: 0 0
		calc(((100% + #{$column-gap}) / #{$column-number}) - #{$column-gap});
	width: calc(((100% + #{$column-gap}) / #{$column-number}) - #{$column-gap});
	&:nth-child(#{$column-number}n) {
		margin-right: 0;
	}
}

@mixin grid-layout($column-number: 4, $column-gap: 30px, $row-gap: 30px) {
	@include flexbox();
	.col {
		@include col($column-number, $column-gap);
		margin-right: $column-gap;
		margin-bottom: $row-gap;
	}
}

//
// Background image set
// _______________________________

//
// Resposive
// _______________________________

@mixin responsive_375() {
	@media #{$res_375_mobile} {
		@content;
	}
}
@mixin responsive_512() {
	@media #{$res_512_mobile} {
		@content;
	}
}
@mixin responsive_768() {
	@media #{$res_768_mobile} {
		@content;
	}
}
@mixin responsive_1024() {
	@media #{$res_1024_mobile} {
		@content;
	}
}

@mixin responsive_1920() {
	@media #{$res_1920} {
		@content;
	}
}